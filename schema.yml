openapi: 3.0.3
info:
  title: Forum Project
  version: 1.0.0
  description: Forum Project
paths:
  /api/activities/:
    get:
      operationId: api_activities_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
    post:
      operationId: api_activities_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/{id}/:
    get:
      operationId: api_activities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    put:
      operationId: api_activities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    patch:
      operationId: api_activities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivityRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    delete:
      operationId: api_activities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/auth/token/login/:
    post:
      operationId: api_admin_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/admin/auth/token/logout/:
    post:
      operationId: api_admin_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/admin/auth/users/:
    get:
      operationId: api_admin_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserList'
          description: ''
    post:
      operationId: api_admin_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/admin/auth/users/{id}/:
    get:
      operationId: api_admin_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_admin_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserListRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_admin_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_admin_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/auth/users/activation/:
    post:
      operationId: api_admin_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/admin/auth/users/me/:
    get:
      operationId: api_admin_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_admin_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserListRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_admin_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_admin_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/auth/users/resend_activation/:
    post:
      operationId: api_admin_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/admin/auth/users/reset_email/:
    post:
      operationId: api_admin_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/admin/auth/users/reset_email_confirm/:
    post:
      operationId: api_admin_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/admin/auth/users/reset_password/:
    post:
      operationId: api_admin_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/admin/auth/users/reset_password_confirm/:
    post:
      operationId: api_admin_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/admin/auth/users/set_email/:
    post:
      operationId: api_admin_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/admin/auth/users/set_password/:
    post:
      operationId: api_admin_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/admin/profiles/:
    get:
      operationId: api_admin_profiles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminCompanyListList'
          description: ''
    post:
      operationId: api_admin_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCompanyListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCompanyListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCompanyListRequest'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyList'
          description: ''
  /api/admin/profiles/{id}/:
    get:
      operationId: api_admin_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyDetail'
          description: ''
    put:
      operationId: api_admin_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCompanyDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCompanyDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCompanyDetailRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyDetail'
          description: ''
    patch:
      operationId: api_admin_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminCompanyDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminCompanyDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminCompanyDetailRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyDetail'
          description: ''
    delete:
      operationId: api_admin_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/users/:
    get:
      operationId: api_admin_users_list
      description: List of users.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminUserList'
          description: ''
  /api/admin/users/{id}/:
    get:
      operationId: api_admin_users_retrieve
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: api_admin_users_update
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: api_admin_users_partial_update
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: api_admin_users_destroy
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/token/login/:
    post:
      operationId: api_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/auth/token/logout/:
    post:
      operationId: api_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/users/:
    get:
      operationId: api_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserList'
          description: ''
    post:
      operationId: api_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: api_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserListRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/activation/:
    post:
      operationId: api_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: api_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserListRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserListRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/resend_activation/:
    post:
      operationId: api_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email/:
    post:
      operationId: api_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: api_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/users/reset_password/:
    post:
      operationId: api_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: api_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/auth/users/set_email/:
    post:
      operationId: api_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/auth/users/set_password/:
    post:
      operationId: api_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/banner/{id}/:
    get:
      operationId: api_banner_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    put:
      operationId: api_banner_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BannerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BannerRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    patch:
      operationId: api_banner_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBannerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBannerRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
  /api/categories/:
    get:
      operationId: api_categories_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: api_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/company-view/{profile_id}/:
    post:
      operationId: api_company_view_create
      parameters:
      - in: path
        name: profile_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewedCompany'
          description: ''
  /api/logo/{id}/:
    get:
      operationId: api_logo_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
          description: ''
    put:
      operationId: api_logo_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogoRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
          description: ''
    patch:
      operationId: api_logo_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogoRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
          description: ''
  /api/profiles/:
    get:
      operationId: api_profiles_list
      description: |-
        List all profiles depending on query parameters:
         include_deleted: bool
         include_all: bool.
      parameters:
      - in: query
        name: activities__name
        schema:
          type: string
      - in: query
        name: is_registered
        schema:
          type: boolean
      - in: query
        name: is_saved
        schema:
          type: boolean
      - in: query
        name: is_startup
        schema:
          type: boolean
      - in: query
        name: new_members
        schema:
          type: array
          items:
            type: string
            enum:
            - --completeness
            - --created_at
            - -completeness
            - -created_at
        description: |-
          Ordering

          * `-completeness` - -completeness
          * `--completeness` - -completeness (descending)
          * `-created_at` - -created at
          * `--created_at` - -created at (descending)
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileListList'
          description: ''
    post:
      operationId: api_profiles_create
      description: |-
        List all profiles depending on query parameters:
         include_deleted: bool
         include_all: bool.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCreate'
          description: ''
  /api/profiles/{id}:
    get:
      operationId: api_profiles_retrieve
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_profiles_update
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_profiles_partial_update
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_profiles_destroy
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/regions/:
    get:
      operationId: api_regions_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/saved-list/:
    post:
      operationId: api_saved_list_create
      description: |-
        List of saved companies.
        Add a company to the saved list.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavedCompanyRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedCompany'
          description: ''
  /api/saved-list/{id}/:
    delete:
      operationId: api_saved_list_destroy
      description: Remove the company from the saved list.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/search/:
    get:
      operationId: api_search_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: region
        schema:
          type: string
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanySerializers'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    Activity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    ActivityRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    AdminCompanyDetail:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        categories:
          type: array
          items:
            type: string
          readOnly: true
        activities:
          type: array
          items:
            type: string
          readOnly: true
        person:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        common_info:
          type: string
          maxLength: 2000
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
        product_info:
          type: string
        address:
          type: string
        startup_idea:
          type: string
        banner_image:
          type: string
          format: uri
          nullable: true
        is_deleted:
          type: boolean
      required:
      - activities
      - categories
      - person
    AdminCompanyDetailRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        common_info:
          type: string
          maxLength: 2000
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
        product_info:
          type: string
        address:
          type: string
        startup_idea:
          type: string
        banner_image:
          type: string
          format: binary
          nullable: true
        is_deleted:
          type: boolean
    AdminCompanyList:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        address:
          type: string
        is_deleted:
          type: boolean
      required:
      - person
    AdminCompanyListRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        address:
          type: string
        is_deleted:
          type: boolean
    AdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          readOnly: true
        phone_number:
          type: string
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
      required:
      - email
      - id
      - name
      - phone_number
      - surname
    AdminUserRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          minLength: 1
          maxLength: 50
        is_active:
          type: boolean
        is_staff:
          type: boolean
      required:
      - name
      - surname
    Banner:
      type: object
      properties:
        banner_image:
          type: string
          format: uri
          nullable: true
    BannerRequest:
      type: object
      properties:
        banner_image:
          type: string
          format: binary
          nullable: true
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    CompanySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          readOnly: true
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        address:
          type: string
        banner_image:
          type: string
          format: uri
          nullable: true
        logo_image:
          type: string
          format: uri
          nullable: true
        person:
          type: integer
        is_saved:
          type: string
          readOnly: true
      required:
      - activities
      - categories
      - id
      - is_saved
      - person
    CustomProfile:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
        is_registered:
          type: boolean
        is_startup:
          type: boolean
      required:
      - is_registered
      - is_startup
    CustomProfileRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        is_registered:
          type: boolean
        is_startup:
          type: boolean
      required:
      - is_registered
      - is_startup
    Logo:
      type: object
      properties:
        logo_image:
          type: string
          format: uri
          nullable: true
    LogoRequest:
      type: object
      properties:
        logo_image:
          type: string
          format: binary
          nullable: true
    PaginatedAdminCompanyListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminCompanyList'
    PaginatedAdminUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
    PaginatedProfileListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileList'
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PasswordResetConfirmRetypeRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
        re_new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedActivityRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedAdminCompanyDetailRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        common_info:
          type: string
          maxLength: 2000
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
        product_info:
          type: string
        address:
          type: string
        startup_idea:
          type: string
        banner_image:
          type: string
          format: binary
          nullable: true
        is_deleted:
          type: boolean
    PatchedAdminUserRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          minLength: 1
          maxLength: 50
        is_active:
          type: boolean
        is_staff:
          type: boolean
    PatchedBannerRequest:
      type: object
      properties:
        banner_image:
          type: string
          format: binary
          nullable: true
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedLogoRequest:
      type: object
      properties:
        logo_image:
          type: string
          format: binary
          nullable: true
    PatchedUserListRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          minLength: 1
          maxLength: 50
    ProfileCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        common_info:
          type: string
          maxLength: 2000
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
        product_info:
          type: string
        address:
          type: string
        startup_idea:
          type: string
        banner_image:
          type: string
          format: uri
          nullable: true
        logo_image:
          type: string
          format: uri
          nullable: true
        is_deleted:
          type: boolean
        created_at:
          type: string
          format: date
          readOnly: true
        updated_at:
          type: string
          format: date
          readOnly: true
        completeness:
          type: integer
          maximum: 32767
          minimum: -32768
        person:
          type: integer
        categories:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - categories
      - created_at
      - id
      - person
      - updated_at
    ProfileCreateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person_position:
          type: string
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        common_info:
          type: string
          maxLength: 2000
        phone:
          type: string
          maxLength: 12
        edrpou:
          type: string
          nullable: true
          maxLength: 8
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
        product_info:
          type: string
        address:
          type: string
        startup_idea:
          type: string
        banner_image:
          type: string
          format: binary
          nullable: true
        logo_image:
          type: string
          format: binary
          nullable: true
        is_deleted:
          type: boolean
        completeness:
          type: integer
          maximum: 32767
          minimum: -32768
        person:
          type: integer
        categories:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - categories
      - person
    ProfileList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        person:
          type: integer
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        region_display:
          type: string
          readOnly: true
        common_info:
          type: string
          maxLength: 2000
        address:
          type: string
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          readOnly: true
        banner_image:
          type: string
          format: uri
          nullable: true
        logo_image:
          type: string
          format: uri
          nullable: true
        is_saved:
          type: string
          readOnly: true
      required:
      - activities
      - categories
      - id
      - is_saved
      - person
      - region_display
    RegionEnum:
      enum:
      - Kyiv
      - Vinnytsia region
      - Volyn region
      - Dnipro region
      - Donetsk region
      - Zhytomyr region
      - Zakarpattia region
      - Zaporizhzhia region
      - IvanoFrankivsk region
      - Kyiv region
      - Kirovohrad region
      - Crimea
      - Luhansk region
      - Lviv region
      - Mykolaiv region
      - Odesa region
      - Poltava region
      - Rivne region
      - Sevastopol
      - Sumy region
      - Ternopil region
      - Kharkiv region
      - Kherson region
      - Khmelnytskyi region
      - Cherkasy region
      - Chernivtsi region
      - Chernihiv region
      type: string
      description: "* `` - \n* `Kyiv` - Київ\n* `Vinnytsia region` - Вінницька область\n\
        * `Volyn region` - Волинська область\n* `Dnipro region` - Дніпропетровська\
        \ область\n* `Donetsk region` - Донецька область\n* `Zhytomyr region` - Житомирська\
        \ область\n* `Zakarpattia region` - Закарпатська область\n* `Zaporizhzhia\
        \ region` - Запорізька область\n* `IvanoFrankivsk region` - Івано-Франківська\
        \ область\n* `Kyiv region` - Київська область\n* `Kirovohrad region` - Кіровоградська\
        \ область\n* `Crimea` - Автономна Республіка Крим\n* `Luhansk region` - Луганська\
        \ область\n* `Lviv region` - Львівська область\n* `Mykolaiv region` - Миколаївська\
        \ область\n* `Odesa region` - Одеська область\n* `Poltava region` - Полтавська\
        \ область\n* `Rivne region` - Рівненська область\n* `Sevastopol` - Севастополь\n\
        * `Sumy region` - Сумська область\n* `Ternopil region` - Тернопільська область\n\
        * `Kharkiv region` - Харківська область\n* `Kherson region` - Херсонська область\n\
        * `Khmelnytskyi region` - Хмельницька область\n* `Cherkasy region` - Черкаська\
        \ область\n* `Chernivtsi region` - Чернівецька область\n* `Chernihiv region`\
        \ - Чернігівська область"
    SavedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        company:
          type: integer
        added_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - added_at
      - company
      - id
      - user
    SavedCompanyRequest:
      type: object
      properties:
        user:
          type: integer
        company:
          type: integer
      required:
      - company
      - user
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetPasswordRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 50
      required:
      - current_password
      - new_email
    SetUsernameRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_email:
          type: string
          format: email
          minLength: 1
          title: Email
          maxLength: 50
      required:
      - current_password
      - new_email
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    TokenCreateRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 50
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
      required:
      - email
      - name
      - surname
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
        profile_id:
          type: integer
          readOnly: true
      required:
      - email
      - id
      - name
      - profile_id
      - surname
    UserListRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
      - surname
    UserRegistration:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
        re_password:
          type: string
      required:
      - name
      - re_password
      - surname
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
        name:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          minLength: 1
          maxLength: 50
        company:
          allOf:
          - $ref: '#/components/schemas/CustomProfileRequest'
          writeOnly: true
        re_password:
          type: string
          minLength: 1
      required:
      - company
      - email
      - name
      - password
      - re_password
      - surname
    UserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 50
        name:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - email
      - name
      - surname
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 50
      required:
      - new_email
    UsernameResetConfirmRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
          title: Email
          maxLength: 50
      required:
      - new_email
    ViewedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        company:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        user_profile_name:
          type: string
          readOnly: true
        company_name:
          type: string
          readOnly: true
      required:
      - company
      - company_name
      - date
      - id
      - user
      - user_profile_name
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
