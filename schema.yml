openapi: 3.0.3
info:
  title: Forum Project
  version: 1.0.0
  description: Your project description
paths:
  /api/activities/:
    get:
      operationId: api_activities_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
    post:
      operationId: api_activities_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/{id}/:
    get:
      operationId: api_activities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    put:
      operationId: api_activities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    patch:
      operationId: api_activities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    delete:
      operationId: api_activities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/auth/token/login/:
    post:
      operationId: api_admin_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/admin/auth/token/logout/:
    post:
      operationId: api_admin_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/admin/auth/users/:
    get:
      operationId: api_admin_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserList'
          description: ''
    post:
      operationId: api_admin_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/admin/auth/users/{id}/:
    get:
      operationId: api_admin_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_admin_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_admin_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_admin_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/auth/users/activation/:
    post:
      operationId: api_admin_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/admin/auth/users/me/:
    get:
      operationId: api_admin_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_admin_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_admin_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_admin_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/auth/users/resend_activation/:
    post:
      operationId: api_admin_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/admin/auth/users/reset_email/:
    post:
      operationId: api_admin_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/admin/auth/users/reset_email_confirm/:
    post:
      operationId: api_admin_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/admin/auth/users/reset_password/:
    post:
      operationId: api_admin_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/admin/auth/users/reset_password_confirm/:
    post:
      operationId: api_admin_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/admin/auth/users/set_email/:
    post:
      operationId: api_admin_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/admin/auth/users/set_password/:
    post:
      operationId: api_admin_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/admin/profiles/:
    get:
      operationId: api_admin_profiles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminCompanyListList'
          description: ''
    post:
      operationId: api_admin_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCompanyList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCompanyList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCompanyList'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyList'
          description: ''
  /api/admin/profiles/{id}/:
    get:
      operationId: api_admin_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyDetail'
          description: ''
    put:
      operationId: api_admin_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCompanyDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCompanyDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCompanyDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyDetail'
          description: ''
    patch:
      operationId: api_admin_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminCompanyDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminCompanyDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminCompanyDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCompanyDetail'
          description: ''
    delete:
      operationId: api_admin_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/users/:
    get:
      operationId: api_admin_users_list
      description: List of users.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminUserList'
          description: ''
  /api/admin/users/{id}/:
    get:
      operationId: api_admin_users_retrieve
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: api_admin_users_update
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: api_admin_users_partial_update
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: api_admin_users_destroy
      description: Retrieve, update or delete a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/token/login/:
    post:
      operationId: api_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/auth/token/logout/:
    post:
      operationId: api_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/users/:
    get:
      operationId: api_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserList'
          description: ''
    post:
      operationId: api_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: api_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/activation/:
    post:
      operationId: api_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: api_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: api_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: api_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: api_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/resend_activation/:
    post:
      operationId: api_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email/:
    post:
      operationId: api_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: api_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/users/reset_password/:
    post:
      operationId: api_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: api_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/auth/users/set_email/:
    post:
      operationId: api_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/auth/users/set_password/:
    post:
      operationId: api_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/categories/:
    get:
      operationId: api_categories_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: api_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/profiles/:
    get:
      operationId: api_profiles_list
      description: |-
        List all profiles depending on query parameters:
         include_deleted: bool
         include_all: bool.
      parameters:
      - in: query
        name: activities__name
        schema:
          type: string
      - in: query
        name: is_registered
        schema:
          type: boolean
      - in: query
        name: is_saved
        schema:
          type: boolean
      - in: query
        name: is_startup
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileListList'
          description: ''
    post:
      operationId: api_profiles_create
      description: |-
        List all profiles depending on query parameters:
         include_deleted: bool
         include_all: bool.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCreate'
          description: ''
  /api/profiles/{id}:
    get:
      operationId: api_profiles_retrieve
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_profiles_update
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_profiles_partial_update
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_profiles_destroy
      description: |-
        Retrieve, update or delete a profile instance.
        Retrieve:
            If user is a person in the profile, full info returned.
            Else profile info without sensitive data returned.
            If user is authenticated, he can get sensitive data via query param 'with_contacts'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/regions/:
    get:
      operationId: api_regions_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/saved-list/:
    post:
      operationId: api_saved_list_create
      description: |-
        List of saved companies.
        Add a company to the saved list.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavedCompany'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedCompany'
          description: ''
  /api/saved-list/{id}/:
    delete:
      operationId: api_saved_list_destroy
      description: Remove the company from the saved list.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/search/:
    get:
      operationId: api_search_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: region
        schema:
          type: string
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanySerializers'
          description: ''
  /api/viewed-list/:
    get:
      operationId: api_viewed_list_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedViewedCompanyList'
          description: ''
    post:
      operationId: api_viewed_list_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewedCompany'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewedCompany'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Activity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    AdminCompanyDetail:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 50
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        categories:
          type: array
          items:
            type: string
          readOnly: true
        activities:
          type: array
          items:
            type: string
          readOnly: true
        person:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        person_position:
          type: string
          nullable: true
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/NullEnum'
        common_info:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 12
        edrpou:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
          nullable: true
        product_info:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        startup_idea:
          type: string
          nullable: true
        banner_image:
          type: string
          format: uri
          nullable: true
        is_deleted:
          type: boolean
      required:
      - activities
      - categories
      - person
    AdminCompanyList:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 50
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        person_position:
          type: string
          nullable: true
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 12
        edrpou:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        address:
          type: string
          nullable: true
        is_deleted:
          type: boolean
      required:
      - person
    AdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          readOnly: true
        phone_number:
          type: string
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
      required:
      - email
      - id
      - name
      - phone_number
      - surname
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    CompanySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        region:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/NullEnum'
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        banner_image:
          type: string
          format: uri
          nullable: true
      required:
      - categories
      - id
    CustomProfile:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 50
        is_registered:
          type: boolean
        is_startup:
          type: boolean
      required:
      - is_registered
      - is_startup
    NullEnum:
      enum:
      - null
    PaginatedAdminCompanyListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminCompanyList'
    PaginatedAdminUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
    PaginatedProfileListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileList'
    PaginatedViewedCompanyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ViewedCompany'
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedActivity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
    PatchedAdminCompanyDetail:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 50
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        categories:
          type: array
          items:
            type: string
          readOnly: true
        activities:
          type: array
          items:
            type: string
          readOnly: true
        person:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        person_position:
          type: string
          nullable: true
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/NullEnum'
        common_info:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 12
        edrpou:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
          nullable: true
        product_info:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        startup_idea:
          type: string
          nullable: true
        banner_image:
          type: string
          format: uri
          nullable: true
        is_deleted:
          type: boolean
    PatchedAdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          readOnly: true
        phone_number:
          type: string
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
    PatchedUserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
    ProfileCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        person_position:
          type: string
          nullable: true
          maxLength: 50
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/NullEnum'
        common_info:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 12
        edrpou:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        founded:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
        service_info:
          type: string
          nullable: true
        product_info:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        startup_idea:
          type: string
          nullable: true
        banner_image:
          type: string
          format: uri
          nullable: true
        is_deleted:
          type: boolean
        person:
          type: integer
        categories:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - categories
      - id
      - person
    ProfileList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        person:
          type: integer
        is_registered:
          type: boolean
          nullable: true
        is_startup:
          type: boolean
          nullable: true
        official_name:
          type: string
          nullable: true
          maxLength: 255
        region:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RegionEnum'
          - $ref: '#/components/schemas/NullEnum'
        region_display:
          type: string
          readOnly: true
        common_info:
          type: string
          nullable: true
          maxLength: 255
        address:
          type: string
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          readOnly: true
        banner_image:
          type: string
          format: uri
          nullable: true
        is_saved:
          type: string
          readOnly: true
      required:
      - activities
      - categories
      - id
      - is_saved
      - person
      - region_display
    RegionEnum:
      enum:
      - Kyiv
      - Vinnytsia region
      - Volyn region
      - Dnipro region
      - Donetsk region
      - Zhytomyr region
      - Zakarpattia region
      - Zaporizhzhia region
      - IvanoFrankivsk region
      - Kyiv region
      - Kirovohrad region
      - Crimea
      - Luhansk region
      - Lviv region
      - Mykolaiv region
      - Odesa region
      - Poltava region
      - Rivne region
      - Sevastopol
      - Sumy region
      - Ternopil region
      - Kharkiv region
      - Kherson region
      - Khmelnytskyi region
      - Cherkasy region
      - Chernivtsi region
      - Chernihiv region
      type: string
      description: |-
        * `Kyiv` - Київ
        * `Vinnytsia region` - Вінницька область
        * `Volyn region` - Волинська область
        * `Dnipro region` - Дніпропетровська область
        * `Donetsk region` - Донецька область
        * `Zhytomyr region` - Житомирська область
        * `Zakarpattia region` - Закарпатська область
        * `Zaporizhzhia region` - Запорізька область
        * `IvanoFrankivsk region` - Івано-Франківська область
        * `Kyiv region` - Київська область
        * `Kirovohrad region` - Кіровоградська область
        * `Crimea` - Автономна Республіка Крим
        * `Luhansk region` - Луганська область
        * `Lviv region` - Львівська область
        * `Mykolaiv region` - Миколаївська область
        * `Odesa region` - Одеська область
        * `Poltava region` - Полтавська область
        * `Rivne region` - Рівненська область
        * `Sevastopol` - Севастополь
        * `Sumy region` - Сумська область
        * `Ternopil region` - Тернопільська область
        * `Kharkiv region` - Харківська область
        * `Kherson region` - Херсонська область
        * `Khmelnytskyi region` - Хмельницька область
        * `Cherkasy region` - Черкаська область
        * `Chernivtsi region` - Чернівецька область
        * `Chernihiv region` - Чернігівська область
    SavedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        company:
          type: integer
        added_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - added_at
      - company
      - id
      - user
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 50
      required:
      - current_password
      - new_email
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 50
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
      required:
      - email
      - name
      - surname
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
      required:
      - email
      - id
      - name
      - surname
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
        password:
          type: string
          writeOnly: true
        name:
          type: string
          maxLength: 50
        surname:
          type: string
          maxLength: 50
        company:
          allOf:
          - $ref: '#/components/schemas/CustomProfile'
          writeOnly: true
        re_password:
          type: string
      required:
      - company
      - email
      - name
      - password
      - re_password
      - surname
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 50
      required:
      - new_email
    ViewedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        company:
          type: integer
        date:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - date
      - id
      - user
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
