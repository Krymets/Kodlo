# Generated by Django 4.2.3 on 2023-09-14 15:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import validation.validate_edrpou
import validation.validate_foundation_year
import validation.validate_image
import validation.validate_phone_number


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('comp_name', models.CharField(default=None, max_length=50, null=True)),
                ('comp_registered', models.BooleanField(default=None, null=True)),
                ('comp_is_startup', models.BooleanField(default=None, null=True)),
                ('comp_official_name', models.CharField(default=None, max_length=255, null=True, unique=True)),
                ('comp_region', models.CharField(choices=[('Kyiv', 'Київ'), ('Vinnytsia region', 'Вінницька область'), ('Volyn region', 'Волинська область'), ('Dnipro region', 'Дніпропетровська область'), ('Donetsk region', 'Донецька область'), ('Zhytomyr region', 'Житомирська область'), ('Zakarpattia region', 'Закарпатська область'), ('Zaporizhzhia region', 'Запорізька область'), ('IvanoFrankivsk region', 'Івано-Франківська область'), ('Kyiv region', 'Київська область'), ('Kirovohrad region', 'Кіровоградська область'), ('Crimea', 'Автономна Республіка Крим'), ('Luhansk region', 'Луганська область'), ('Lviv region', 'Львівська область'), ('Mykolaiv region', 'Миколаївська область'), ('Odesa region', 'Одеська область'), ('Poltava region', 'Полтавська область'), ('Rivne region', 'Рівненська область'), ('Sevastopol', 'Севастополь'), ('Sumy region', 'Сумська область'), ('Ternopil region', 'Тернопільська область'), ('Kharkiv region', 'Харківська область'), ('Kherson region', 'Херсонська область'), ('Khmelnytskyi region', 'Хмельницька область'), ('Cherkasy region', 'Черкаська область'), ('Chernivtsi region', 'Чернівецька область'), ('Chernihiv region', 'Чернігівська область')], default=None, max_length=128, null=True)),
                ('comp_common_info', models.CharField(default=None, max_length=255, null=True)),
                ('comp_phone_number', models.CharField(default=None, max_length=12, null=True, validators=[validation.validate_phone_number.validate_phone_number_is_digit, validation.validate_phone_number.validate_phone_number_len])),
                ('comp_EDRPOU', models.IntegerField(default=None, null=True, unique=True, validators=[validation.validate_edrpou.validate_edrpou])),
                ('comp_year_of_foundation', models.SmallIntegerField(default=None, null=True, validators=[validation.validate_foundation_year.validate_foundation_year_range])),
                ('comp_service_info', models.TextField(default=None, null=True)),
                ('comp_product_info', models.TextField(default=None, null=True)),
                ('comp_address', models.TextField(default=None, null=True)),
                ('comp_banner_image', models.ImageField(null=True, upload_to='', validators=[validation.validate_image.validate_image_format, validation.validate_image.validate_image_size])),
                ('person_position', models.CharField(default=None, max_length=50, null=True)),
                ('startup_idea', models.TextField(default=None, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('comp_activity', models.ManyToManyField(to='profiles.activity')),
                ('comp_category', models.ManyToManyField(to='profiles.category')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavedCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_list', to='profiles.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_list_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ViewedCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'company')},
            },
        ),
    ]
